import Head from "next/head";
import Header from "../components/Header";
import { lazy, useContext, useMemo, useState } from "react";
import cardList from "../constants/card";
import classnames from "classnames";
import { CardContext, isClient } from "../utils";
import Card from "../components/Card";
import AnimateOnChange from "../components/AnimateOnChange";
import Image from "next/image";
import StatusHUD from "../components/StatusHUD";

// const AnimateOnChange = lazy(() => import("../components/AnimateOnChange"));

export default function Home() {
  const [eye, setEye] = useState(false);
  const { current, currentIndex } = useContext(CardContext);

  const cover = useMemo(
    () => (
      <div className="fixed -inset-[4px]">
        <Image
          loading="eager"
          src={current.cover}
          alt={current.title}
          style={{
            objectFit: "cover",
            objectPosition: "center",
            filter: eye ? undefined : "blur(2px) brightness(50%)",
          }}
          sizes="100vw"
          className={classnames(
            "h-full w-full transition-all z-[2] duration-500"
          )}
        />
      </div>
    ),
    [current.cover, current.title, eye]
  );

  return (
    <>
      <Head>
        <title>Dahanu Rd.</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <div
        className={classnames(
          eye ? "opacity-0" : "opacity-100",
          "transition-opacity"
        )}
      >
        <Header />
      </div>
      <main className="overflow-hidden h-[calc(100vh-112px)] pb-12 pl-32">
        <StatusHUD />
        {cover}
        <button
          type="button"
          onMouseEnter={() => setEye(true)}
          onMouseLeave={() => setEye(false)}
          className={classnames(
            { "opacity-20": eye },
            "transition-opacity px-3 py-1 text-xs rounded-full bg-white/20 fixed left-5 bottom-5 z-40"
          )}
        >
          👁️
        </button>
        <div
          className={classnames(
            eye ? "opacity-0" : "opacity-100",
            "transition-opacity h-full pb-20 flex items-center space-x-14 relative z-[1] pl-[42px]"
          )}
        >
          <div className="max-w-[42vw] ">
            <h1
              className="text-white font-lexend text-[96px] leading-[120px]"
              style={{ textShadow: "0px 4px 4px rgba(0, 0, 0, 0.25)" }}
            >
              <AnimateOnChange
                animationIn="fadeIn"
                animationOut="fadeOut"
                durationIn="200ms"
                durationOut="200ms"
                suppressHydrationWarning={true}
                easingsIn="easeInQuad"
                easingsOut="easeInQuad"
              >
                {current.title}
              </AnimateOnChange>
            </h1>
            <p
              className="text-white/90 text-base leading-[26px] font-montserrat"
              style={{ textShadow: "0px 4px 4px rgba(0, 0, 0, 0.25)" }}
            >
              <AnimateOnChange
                animationIn="fadeIn"
                animationOut="fadeOut"
                durationIn="200ms"
                durationOut="200ms"
                easingsIn="easeInQuad"
                easingsOut="easeInQuad"
                className="whitespace-pre-wrap"
              >
                {current.description}
              </AnimateOnChange>
            </p>
          </div>
          <div className="flex-1 overflow-hidden">
            <div
              className="flex space-x-[50px] items-center transition-all duration-500"
              style={{ transform: `translateX(-${currentIndex * 310}px)` }}
            >
              {cardList.map((e, i) => (
                <Card key={e.id} item={e} index={i} />
              ))}
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
